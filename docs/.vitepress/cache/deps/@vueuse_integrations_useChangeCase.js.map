{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@vueuse+integrations@10.9.0_change-case@4.1.2_focus-trap@7.5.4_nprogress@0.2.0_vue@3.4.27_typescript@5.0.4_/node_modules/@vueuse/integrations/useChangeCase.mjs"],
  "sourcesContent": ["import { toValue } from '@vueuse/shared';\nimport { computed, ref } from 'vue-demi';\nimport { camelCase, capitalCase, constantCase, dotCase, headerCase, noCase, paramCase, pascalCase, pathCase, sentenceCase, snakeCase } from 'change-case';\n\nvar changeCase = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  camelCase: camelCase,\n  capitalCase: capitalCase,\n  constantCase: constantCase,\n  dotCase: dotCase,\n  headerCase: headerCase,\n  noCase: noCase,\n  paramCase: paramCase,\n  pascalCase: pascalCase,\n  pathCase: pathCase,\n  sentenceCase: sentenceCase,\n  snakeCase: snakeCase\n});\n\nfunction useChangeCase(input, type, options) {\n  if (typeof input === \"function\")\n    return computed(() => changeCase[type](toValue(input), options));\n  const text = ref(input);\n  return computed({\n    get() {\n      return changeCase[type](text.value, options);\n    },\n    set(value) {\n      text.value = value;\n    }\n  });\n}\n\nexport { useChangeCase };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAI,aAA0B,OAAO,OAAO;AAAA,EAC1C,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAED,SAAS,cAAc,OAAO,MAAM,SAAS;AAC3C,MAAI,OAAO,UAAU;AACnB,WAAO,SAAS,MAAM,WAAW,IAAI,EAAE,QAAQ,KAAK,GAAG,OAAO,CAAC;AACjE,QAAM,OAAO,IAAI,KAAK;AACtB,SAAO,SAAS;AAAA,IACd,MAAM;AACJ,aAAO,WAAW,IAAI,EAAE,KAAK,OAAO,OAAO;AAAA,IAC7C;AAAA,IACA,IAAI,OAAO;AACT,WAAK,QAAQ;AAAA,IACf;AAAA,EACF,CAAC;AACH;",
  "names": []
}
